From 5c7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5 Mon Sep 17 00:00:00 2001
From: Xinran_StarBai <3432632982@qq.com>
Date: Sun, 21 Sep 2025 15:00:00 +0800
Subject: [PATCH] Add notifications for unsigned modules (fuzzy match)

This patch adds terminal/kernel notifications when unsigned modules are blocked (fuzzy match for multi-kernel versions)
GitHub: @Winkmoon
Signed-off-by: Xinran_StarBai <3432632982@qq.com>
---
diff --git a/kernel/module.c b/kernel/module.c
index 3e4f5a6b..7c8d9e0f 100644
--- a/kernel/module.c
+++ b/kernel/module.c
@@ -1,6 +1,6 @@
 /*
  *  kernel/module.c
- *
+ *
  *  Copyright (C) 2001 Rusty Russell.
  *
  *  This program is free software; you can redistribute it and/or modify
@@ -5,6 +5,8 @@
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
 #include <linux/export.h>
+#include <linux/tty.h>
+#include <linux/cred.h>
 #include <linux/extable.h>
 #include <linux/moduleloader.h>
 #include <linux/trace_events.h>
@@ -1210,6 +1212,35 @@ static int module_sig_check(struct load_info *info, int flags)
 #endif /* CONFIG_MODULE_SIG_FORCE */
 	return 0;
 }
+
+#ifdef CONFIG_MODULE_SIG_ALL
+/*
+ * Print notification to current terminal when unsigned module is blocked
+ */
+static void print_to_terminal(const char *msg)
+{
+	struct tty_struct *tty;
+	struct file *tty_file;
+	mm_segment_t old_fs;
+
+	tty = current->signal->tty;
+	if (!tty || !tty->name)
+		return;
+
+	old_fs = get_fs();
+	set_fs(KERNEL_DS);
+
+	tty_file = filp_open(tty->name, O_WRONLY, 0);
+	if (!IS_ERR(tty_file)) {
+		kernel_write(tty_file, msg, strlen(msg), &tty_file->f_pos);
+		filp_close(tty_file, NULL);
+	}
+
+	set_fs(old_fs);
+}
+#endif /* CONFIG_MODULE_SIG_ALL */
+
 #endif /* !CONFIG_MODULE_SIG */

 /*
@@ -1290,8 +1321,15 @@ static int load_module(struct load_info *info, const char __user *uargs, int flag
 	/* Check module signature if module signing is enabled. */
 	err = module_sig_check(info, flags);
+#ifdef CONFIG_MODULE_SIG_ALL
+	if (err) {
+		printk(KERN_ERR "检测到非法操作！禁止加载未签名模块，操作已被内核拦截！\n");
+		print_to_terminal("检测到非法操作！禁止加载未签名模块，操作已被内核拦截！\n");
+		goto free_copy;
+	}
+#else
 	if (err)
 		goto free_copy;
+#endif /* CONFIG_MODULE_SIG_ALL */

 	/* Figure out module layout, and allocate all the memory. */
 	err = layout_and_allocate(info, flags);
-- 
2.34.1
